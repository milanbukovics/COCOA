::: {.content-hidden}
Copyright (C) 2024 Claudio Talarico (talarico@gonzaga.edu)
:::

```{python}
#| label: fig-rr-10
#| echo: false
#| fig-cap: "AC equivalent model of the constant-$g_m$ bias circuit"
import schemdraw as sd
import schemdraw.elements as elm
import schemdraw.dsp as dsp
with sd.Drawing() as d:
    d.config(unit=2)
    d.config(fontsize=16)
    
    elm.Ground().left()
    elm.Line().down().length(0.5)
    M3 = elm.AnalogPFet(offset_gate=False).theta(0).label(r'$M_{3}$',loc='lft')
    L1 = elm.Line().right().at(M3.gate).length(2)
    M4 = elm.AnalogPFet(offset_gate=False).theta(0).label(r'$M_{4}$',loc='rgt').anchor('gate').reverse()
    elm.Line().up().length(0.5).at(M4.source)
    elm.Line().left().length(3.8).dot()
    elm.Dot().at(M4.gate).label(r'$v_4$',color='blue')
    elm.Line().down().at(M4.gate).length(1)
    elm.Line().right().length(0.9).dot()
    L2 = elm.Line().down().length(1).at(M4.drain)
    M2 = elm.AnalogNFet(offset_gate=False).theta(0).reverse().label(r'$M_{2}$',loc='rgt')
    R2 = elm.Resistor().label('$R_2$').down()
    elm.Ground().right()
    elm.Line().left().length(2).at(M2.gate)
    M1 = elm.AnalogNFet(offset_gate=False).theta(0).label(r'$M_{1}$').anchor('gate')
    elm.Dot().at(M1.gate).label(r'$v_1$',ofst=[0.5,0.1],color='blue')
    elm.Line().up().at(M1.gate).length(1)
    elm.Line().left().length(0.9).dot()
    elm.Line().up().at(M1.drain).to(M3.drain)
    elm.Line().down().at(M1.source)
    elm.Line().right().to(R2.end).dot()
```
